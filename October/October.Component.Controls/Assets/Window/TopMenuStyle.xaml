<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:October.Component.Controls.Converters">
    <!--
        TopLevelItem	没有子菜单，直接执行命令
        TopLevelHeader	能够弹出子菜单
        SubmenuItem	没有子菜单，直接执行命令
        SubmenuHeader	能够弹出子菜单
    -->

    <!--  ScrollViewer for a MenuItem  -->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <converters:WindowWidthToMenuMarginConverter x:Key="windowWidthToMenuMarginConverter"/>
    <DropShadowEffect x:Key="LightEffect" Color="White" ShadowDepth="0" Opacity="1" RenderingBias="Performance"/>

    <Style x:Key="UserMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Background" Value="{DynamicResource MainToolBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MainWindowForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <WrapPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource MainToolBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MainWindowForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <WrapPanel
                        ClipToBounds="True"
                        IsItemsHost="True"
                        Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  有子菜单-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"  TargetType="{x:Type MenuItem}">
        <Border 
            x:Name="Border"
            Margin="0,0,0,0">
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                <ContentPresenter
                    Margin="0" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" VerticalAlignment="Center"/>
                <Rectangle Fill="Transparent"  Opacity="0.01000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Bottom"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="{DynamicResource MainToolBackground}"
                        BorderThickness="0"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Opacity" Value="{DynamicResource MouseMoveOpacity}"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="宋体"/>

            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="宋体" />
                <Setter Property="Opacity" Value="{DynamicResource NormalOpacity}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"  Value="{DynamicResource DisableOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem 没有子菜单 本项目暂时没用  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Margin="0,0,48,0">
            <Grid>
                <ContentPresenter
                    Margin="0"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Rectangle Fill="Transparent"  Opacity="0.01000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Red" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem 没有子菜单  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Height="48" Background="#01000001">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent" Grid.Column="0" Grid.ColumnSpan="4"  Opacity="0.01000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <ContentPresenter
                    x:Name="Icon"
                    Margin="0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    x:Name="Check"
                    Width="13"
                    Height="13"
                    Margin="0"
                    Background="Blue"
                    BorderBrush="Red"
                    BorderThickness="1"
                    Visibility="Collapsed">
                    <Path
                        x:Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                        SnapsToDevicePixels="False"
                        Stroke="Yellow"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Border>
                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <!--显示手势文本-->
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="0"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Opacity" Value="{DynamicResource MouseMoveOpacity}"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="宋体"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="宋体" />
                <Setter Property="Opacity" Value="{DynamicResource NormalOpacity}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--有子菜单的子菜单 本项目只有资产统计那在用-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0" Height="48">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent" Grid.Column="0" Grid.ColumnSpan="4"  Opacity="0.01000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <ContentPresenter
                    x:Name="Icon"
                    Margin="0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    VerticalAlignment="Center"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="0"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{DynamicResource MainMenuIconFill}" />
                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    VerticalOffset="-1"
                    HorizontalOffset="20"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade">
                    <Border
                        x:Name="SubmenuBorder"
                        Background="{DynamicResource MainToolBackground}"
                        BorderThickness="0"
                        SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Opacity" Value="{DynamicResource MouseMoveOpacity}"/>
                <Setter Property="FontSize" Value="14" />
                <!--<Setter Property="FontFamily" Value="{DynamicResource SourceHanSansCNBold}"/>-->
            </Trigger>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="FontSize" Value="14" />
                <!--<Setter Property="FontFamily" Value="{DynamicResource SourceHanSansCNRegular}" />-->
                <Setter Property="Opacity" Value="{DynamicResource NormalOpacity}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="{DynamicResource CommonCornerRadius}" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->
    <Style x:Key="MainMenuItemStyle" TargetType="{x:Type MenuItem}">        
        <Setter Property="Header" Value="{Binding name}" />
        <Setter Property="ItemsSource" Value="{Binding Path=children}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Command" Value="{Binding ElementName=mainWindow,Path=DataContext.MenuItemCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="IsSubmenuOpen" Value="{Binding IsSubItemOpen,Mode=TwoWay}"></Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Margin" Value="{Binding Path=ActualWidth,ElementName=mainWindow,Converter={StaticResource windowWidthToMenuMarginConverter}}"/>
                <Setter Property="Height" Value="48"/>              
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--右上角用户信息菜单-->
    <Style x:Key="UserMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Header" Value="{Binding name}" />
        <Setter Property="ItemsSource" Value="{Binding Path=children}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Command" Value="{Binding ElementName=mainWindow,Path=DataContext.MenuItemCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>